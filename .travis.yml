language: bash
branches:
  except:
  - donttestme
sudo: required
services:
- docker
before_install:
  - wget https://kubernetes-helm.storage.googleapis.com/helm-v2.13.1-linux-amd64.tar.gz
  - tar xzvf helm-v2.13.1-linux-amd64.tar.gz
  - mv linux-amd64/helm helm
  - chmod u+x helm
  - wget https://github.com/garethr/kubeval/releases/download/0.7.3/kubeval-linux-amd64.tar.gz 
  - tar xzvf kubeval-linux-amd64.tar.gz
  - chmod u+x kubeval
  - mv helm kubeval /home/travis/bin/
  - helm init -c
env:
  - KUBERNETES_VERSION="1.12.0"
jobs:
  include:
    - stage: deploy to helm repo (do it first to speed up testing)
      script:
        - environment:
            - GITHUB_PAGES_REPO: USERNAME/helm-charts
            - wget -O - https://raw.githubusercontent.com/funkypenguin/helm-github-pages/master/publish.sh | sh  
    - stage: helm-chart - lint chart syntax
      script:
        - helm lint helm-chart/docker-mailserver
    - stage: helm-chart - kubeval generated manifests
      script:   
        - mkdir manifests
        - helm template helm-chart/docker-mailserver --output-dir manifests
        - find manifests/ -name '*.yaml' | grep -v crd | xargs kubeval -v $KUBERNETES_VERSION
    - stage: helm-chart - execute unit tests
      script:  
        - mkdir -p helm-chart/docker-mailserver/config/opendkim/keys/example.com
        - cp helm-chart/docker-mailserver/demo-mode-dkim-key-for-example.com.key helm-chart/docker-mailserver/config/opendkim/keys/example.com/mail.private
        - echo "sample data for unit test" > helm-chart/docker-mailserver/config/opendkim/ignore.txt
        - travis_retry helm plugin install https://github.com/lrills/helm-unittest
        - helm unittest helm-chart/docker-mailserver 
    - stage: docker-mailserver tests
      script:
        - travis_retry travis_wait make build-no-cache
        - make generate-accounts run generate-accounts-after-run fixtures test

env:
  secure: X0ruiXtzArHPaOAd5cQS0axHGwMM5HwqSHASr/KnzV1yZUPzJIrzJQYSCJmFPzk6zuboA2Tsa96zu+DftgA9N9WgzTYmjp8M10y9vcK4cpkfi5frs7GVorVLPQ5kcWwYPf/j+YzpP5OwrRSxDDG853GJ4OhoALcjmmBJk8NwIKZOkA6x2RvvcDRx6dc216QdhmouD5Hz0tImkE2rYdQNm44IN7OF6wekbEhOzN2Chz6yGit3duRvxBrNOPqmGqkFwtg0sxyQO0iBa4qvg88qrKQOIHwUG5y4rp8QcdqfRMv/lSNGEg1Mh7iDUHbZpvcAoXREXp9FMEY/SJ1uYkcEMn+GvLDQ/BOFwKjC/duWM3oMPgzjqI+gwpIdlTZt5+Qu9v4Z6+XJ5P+JIWZYtzudDVuOzVMSIzwk9y2a/ufYXGQdvGktf6H51WCcA8CO2muxLtDwDtV1okAVm+HXkgQ/pcwjqqq3n3RojN6Xxm+TJggn3HgU21qug/K1lukycwCjQbI8s0ey3soT1+oPc8Fl95n35eXTUY3DOd0u14e0Y3XKIbG9Rvyp9U8gJC2Ij6+EXSdHlFhvr5tJJLNwXkXjV3yMnLgtlSnuGBGHUpv0+XZuSsGqOropl/KDUurb2TGkIH7PjpBpFm6PhSbLViGXrupuxTvKLdsXBXospzODuEQ=            